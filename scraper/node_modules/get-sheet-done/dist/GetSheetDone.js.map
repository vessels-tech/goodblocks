{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7c2cf9e7cf6e90a6b985","webpack:///./src/index.js","webpack:///external {\"commonjs\":\"fetch-jsonp\",\"commonjs2\":\"fetch-jsonp\",\"amd\":\"fetch-jsonp\",\"root\":\"fetchJsonp\"}"],"names":["buildUrl","parseRawCells","parseLabeledCols","parseLabeledRowsCols","raw","labeledCols","labeledColsRows","id","sheetNum","mode","fetchAndParse","type","parseEntries","length","Promise","reject","Error","url","resolve","then","response","json","data","feed","entry","res","title","$t","updated","catch","ex","entries","forEach","row","parseInt","cell","gs$cell","col","content","undefined","parseEntry","Object","keys","key","indexOf","label","substr","map","parseLabeledRow","cols","split","reduce","acc","pair"],"mappings":"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","file":"GetSheetDone.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fetch-jsonp\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"GetSheetDone\", [\"fetch-jsonp\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GetSheetDone\"] = factory(require(\"fetch-jsonp\"));\n\telse\n\t\troot[\"GetSheetDone\"] = factory(root[\"fetchJsonp\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7c2cf9e7cf6e90a6b985","import fetchJsonp from 'fetch-jsonp';\n\nexport function buildUrl(id, sheetNum, mode) {\n  return `https://spreadsheets.google.com/feeds/${mode}/${id}/${sheetNum}/public/values?alt=json-in-script`;\n}\n\n// Generic fetch and parse function\nfunction fetchAndParse(id, sheetNum, type, parseEntries) {\n  if (id.length === 0) {\n    return Promise.reject(new Error('empty id'));\n  }\n  const url = buildUrl(id, sheetNum, type);\n  return new Promise((resolve, reject) => {\n    fetchJsonp(url).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      const data = parseEntries(json.feed.entry);\n      const res = {\n        title: json.feed.title.$t,\n        updated: json.feed.updated.$t,\n        data\n      };\n      resolve(res);\n    }).catch(function (ex) {\n      reject(ex);\n    });\n  });\n}\n\nexport function parseRawCells(entries) {\n  const data = [];\n  entries.forEach(cell => {\n    const row = parseInt(cell.gs$cell.row, 10) - 1;\n    const col = parseInt(cell.gs$cell.col, 10) - 1;\n    const content = cell.gs$cell.$t;\n    if (data[row] === undefined) {\n      data[row] = [];\n    }\n    data[row][col] = content;\n  });\n  return data;\n}\n\n/**\n * Use for table with labels only for columns\n */\nfunction parseEntry(entry) {\n  const res = {};\n  Object.keys(entry).forEach(key => {\n    if (key.indexOf('gsx$') === 0) {\n      const label = key.substr(4);\n      res[label] = entry[key].$t;\n    }\n  });\n  return res;\n}\n\n/**\n * Parser for table where just the columns are labeled\n * @return array of objects where the labels are keys\n */\nexport function parseLabeledCols(entries) {\n  return entries.map(entry => parseEntry(entry));\n}\n\n/**\n * Use for table with labels for rows AND columns\n * Example input: \"bar: 123, baz: 122, bab: 234\"\n */\nfunction parseLabeledRow(row) {\n  const cols = row.split(', ');\n  const res = cols.reduce((acc, col) => {\n    const pair = col.split(': ');\n    acc[pair[0]] = pair[1];\n    return acc;\n  }, {});\n  return res;\n}\n\n/**\n * Parser for table where both rows and columns are labeled\n * @return object where keys are row labels and values are objects where keys are the column labels\n */\nexport function parseLabeledRowsCols(entries) {\n  const res = {};\n  entries.forEach(entry => {\n    res[entry.title.$t] = parseLabeledRow(entry.content.$t);\n  });\n  return res;\n}\n\n// fetch as raw arrays\nexport function raw(id, sheetNum = 1) {\n  return fetchAndParse(id, sheetNum, 'cells', parseRawCells);\n}\n\n// fetch as array of labeled columns\nexport function labeledCols(id, sheetNum = 1) {\n  return fetchAndParse(id, sheetNum, 'list', parseLabeledCols);\n}\n\n// fetch as labeled map of labeled columns\nexport function labeledColsRows(id, sheetNum = 1) {\n  return fetchAndParse(id, sheetNum, 'list', parseLabeledRowsCols);\n}\n\nexport default {\n  raw,\n  labeledCols,\n  labeledColsRows\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"fetch-jsonp\",\"commonjs2\":\"fetch-jsonp\",\"amd\":\"fetch-jsonp\",\"root\":\"fetchJsonp\"}\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}